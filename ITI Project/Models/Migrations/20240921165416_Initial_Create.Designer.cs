// <auto-generated />
using ITI_Project.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITI_Project.Models.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240921165416_Initial_Create")]
    partial class Initial_Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITI_Project.Models.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Degree")
                        .HasColumnType("real");

                    b.Property<float>("Hours")
                        .HasColumnType("real");

                    b.Property<float>("MinDegree")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("dept_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dept_id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.CrsResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CRS_Id")
                        .HasColumnType("int");

                    b.Property<float>("Degree")
                        .HasColumnType("real");

                    b.Property<int>("Trainee_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CRS_Id");

                    b.HasIndex("Trainee_Id");

                    b.ToTable("CourseResule");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manager")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("Crs_id")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<decimal>("Salaey")
                        .HasColumnType("decimal(12 , 2)");

                    b.Property<int>("dept_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Crs_id");

                    b.HasIndex("dept_id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("dept_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dept_id");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.Course", b =>
                {
                    b.HasOne("ITI_Project.Models.Entities.Department", "Department")
                        .WithMany("courses")
                        .HasForeignKey("dept_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.CrsResult", b =>
                {
                    b.HasOne("ITI_Project.Models.Entities.Course", "Course")
                        .WithMany("CourseResult")
                        .HasForeignKey("CRS_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ITI_Project.Models.Entities.Trainee", "Trainee")
                        .WithMany("CourseResult")
                        .HasForeignKey("Trainee_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.Instructor", b =>
                {
                    b.HasOne("ITI_Project.Models.Entities.Course", "Course")
                        .WithMany("instructors")
                        .HasForeignKey("Crs_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ITI_Project.Models.Entities.Department", "Department")
                        .WithMany("instructors")
                        .HasForeignKey("dept_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.Trainee", b =>
                {
                    b.HasOne("ITI_Project.Models.Entities.Department", "Department")
                        .WithMany("trainees")
                        .HasForeignKey("dept_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.Course", b =>
                {
                    b.Navigation("CourseResult");

                    b.Navigation("instructors");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.Department", b =>
                {
                    b.Navigation("courses");

                    b.Navigation("instructors");

                    b.Navigation("trainees");
                });

            modelBuilder.Entity("ITI_Project.Models.Entities.Trainee", b =>
                {
                    b.Navigation("CourseResult");
                });
#pragma warning restore 612, 618
        }
    }
}
